<p><em><a href="https://www.amazon.com/Enterprise-Architecture-Strategy-Foundation-Execution/dp/1591398398/">Enterprise Architecture as Strategy</a> by Jeanne W. Ross, Peter Weill, and David C Robertson is an interesting read on how integrating technology across business units shifts the company&rsquo;sstrategy landscape. Written in 2006, case studies are not particularly current but the ideas remains relevant.</em></p>
<hr>
<p>The technology industry is simultaneously grasped by the optimism that things are changing constantly&ndash;your skills from last year are already out of date!&ndash;and
the worry that nothing particularly important has changed since the 1970s when the unix epoch began.
I opened
<em><a href="https://www.amazon.com/Enterprise-Architecture-Strategy-Foundation-Execution/dp/1591398398/">Enterprise Architecture as Strategy</a></em>
by Jeanne W. Ross, Peter Weill, and David C Robertson, published in 2006, with both of those ideas firmly in mind.</p>
<p>Despite the age, I think this is one of the better strategy books <a href="https://lethain.com/strategy-notes/">I&rsquo;ve read recently</a>.
In oarticular, it has some very relevant, structured thoughts on managing coordination across business units within
a given company, which is something I&rsquo;ve been thinking about quite a bit as the CTO for a company with a number of
sophsticated business lines.</p>
<h2 id="core-concepts">Core concepts</h2>
<p>The book&rsquo;s core premise (summarized on pages 8-9) is that every company should
build a foundation for execution composed of:</p>
<ol>
<li><em>Operating model</em> &ndash; business process integration and standardization across business units in a company
(e.g. where do you select technologies for a business unit?)</li>
<li><em>Enterprise architecture</em> &ndash; organizing logic for business process and IT infrastructure.
Essentially, how do you service shared concerns (e.g. customer database)</li>
<li><em>IT engagement model</em> &ndash; the system of governance mechanisms that dictate how the business
and IT work together to solve problems</li>
</ol>
<p>This isn&rsquo;t <em>groundbreaking</em>, but it <em>is</em> a useful framework.
Most companies that I&rsquo;ve worked within fail to set the rules
for decision making, and instead allow ambiguous, semi-political systems
to drive outcomes. That&rsquo;s less true for companies as they grow larger,
and the ongoing friction within multi-business unit companies eventually
forces clearer rules, but this book suggests we could just specify the answers
to these predictable problems instead of discovering them anew at each company.</p>
<p>These ideas are relatively less interesting in the context of a single business line company,
where most of these concerns don&rsquo;t show up nearly as often.
(Although, any <a href="https://lethain.com/engineering-in-mergers-and-acquisition/">acquisition</a> does
introduce the questions, sometimes very abruptly.)</p>
<h2 id="operating-models">Operating models</h2>
<p><img src="https://lethain.com/static/blog/2023/enterprise-arch-op-models.jpg" alt="Two by two grid describing tradeoffs between coordination, unification, diversification and replication operating models for enterprise architecture"></p>
<p>The book proposes four operating models, based on a 2 by 2 grid of two concepts: high and low standardization, and high and low integration.
Standardization is running different business units in the same way. Integration is depending on the
availability, accuracy and timeliness of other business units&rsquo; data.</p>
<ol>
<li><em>Coordination</em> (low standardiation, high integration) &ndash; few shared implementations, but highly shared data</li>
<li><em>Unification</em> (high standardization, high integration) &ndash; shared implementation and heavy coupling of data across business units</li>
<li><em>Diversification</em> (low standardization, low integration) &ndash; very little alignment across business units, maybe some shared services</li>
<li><em>Replication</em> (high standardization, low integration) &ndash; shared implementation but little shared data across business units that serve
distinct and unshared customers</li>
</ol>
<p>I&rsquo;d never seen this breakdown before reading this book, and I find it a very useful vocabulary to
discuss some of the challenges I have seen across business units in a company. Specifically,
it&rsquo;s helpful for diagnosing why two pairs of business units behave so differently from one another.
One pair has low integration, and the other has high integration, but we&rsquo;ve been hoping to reason
about them in the same way. The friction was obvious, but how we might modify the playbook was
less obvious without this vocabulary.</p>
<p>I particularly appreciated this quote (p43):</p>
<blockquote>
<p>A poor choice of operating model&ndash;one that is not viable in a given market&ndash;will have dire consequences.
But not choosing an operating model is just as risky.</p>
</blockquote>
<p>Many leadership teams are so failure-averse that they try to preserve optionality by not making decisions,
but generally those decisions get made anyway, at lower levels of your organization, while you sit around
and pretend that you&rsquo;re studying the situation at hand.</p>
<h2 id="four-stages-of-maturity">Four stages of maturity</h2>
<p>The book introduces (p71) four stage of enterprsie architecture maturity: business silos, standardized technology,
optimized core, and business modularity. I find the stages specifically a bit hard to map into my experience,
likely due to the sorts of companies I&rsquo;ve worked in, but it&rsquo;s an interesting lens.
Further, they introduce the concept of these four stages as a progression, and their belief
that it&rsquo;s impossible to skip phases: you most go phase by phase from left to right.</p>
<p>They also introduce (p105-109) a series of practices to adopt within each phase.
For example, IT ownership is decentralized in phase 2 (business silos),
but should be own by a single executive in phase 3 (standardized technology).</p>
<p>Potentially my issue is that most startups and scaleups operate in phase 3 doing their
early years, and only reach phase 4 late (if ever). That said, I&rsquo;m not particularly convinced
that the 4th phase is an improvement over the 3rd. More generally, I didn&rsquo;t find this
vocabulary particularly helpful.</p>
<h2 id="leadership-agenda">Leadership agenda</h2>
<p>This sort of book inevitably feels obligated to end with recommended steps
for leaders to implement their ideas, and this book is no exception.
Towards the end (p195), it proposes a set of common steps such as
&quot; <em>Analyze your existing foundation for execution</em>.&quot;
I don&rsquo;t find those super helpful, as they largely recap the previous sections of the book.</p>
<p>They also have a handful of principles to keep in mind while implementing these
changes. The three of those principles that I find most usefula re:</p>
<ul>
<li>&ldquo;Initiate Change From the Top&rdquo; &ndash; the politics and stakeholder management to
make these changes is immense. Conversely, many technical leaders&ndash;and even many engineers&ndash;want to
anchor on the concept of bottoms-up leadership, that rejects making these sorts of top-down decisions.
That, in my experience, simply doesn&rsquo;t work beyond a couple hundred people, and we should focus more
on <em>good</em> top-down leadership instead for larger teams. Don&rsquo;t get me wrong &ndash; bottoms up leadership is
extremely desirable when it works, but I think the industry spends too much time pretending we&rsquo;re supporting bottoms-up
leadership when infact we&rsquo;re just absconding from our professional duties</li>
<li>&ldquo;Don&rsquo;t Skip Stages&rdquo; &ndash; in the maturity model (e.g. from business silos to business modularity), there&rsquo;s a natural
desire to simply skip to the last stage of maturity. The observation that skipping stages generally doesn&rsquo;t
work is an interesting one, and something I&rsquo;ll need to ponder a bit</li>
<li>&ldquo;Implement the Foundation One Project at a Time&rdquo; &ndash; the desire for transformational change often overpowers
our senses, leading us to concurrent migrations that we know are very unlikely to succeed.
Throttling the approach to ensure it succeeds is a recurring leadership lesson for me,
and certainly resonates</li>
</ul>
<p>Altogether, this section is worth a quick skim. It was notably less dense
than the preceeding ones,
but I recognize how they get edited in to make the research &ldquo;more actionable.&rdquo;</p>
<h2 id="case-studies--surveys">Case studies &amp; surveys</h2>
<p>This thing that impresses me the most about this book is how much data it&rsquo;s built on
(page <code>ix</code>), relying on 50+ case studies and 200+ surveys, and operating in a field of
study the three authors focused on for a decade-plus.</p>
<p>Beyond simply the number of case studies, there&rsquo;s the quality and level of detail in the
case studies as well, which is very high. There simply aren&rsquo;t enough books written this way,
because they take so much effort to write, and I find it very inspiring to see the extent
of research that went into the book.</p>
<h2 id="final-thoughts">Final thoughts</h2>
<p>This was a facsinating read. Some of its biggest focuses were slightly dated by being almost 20 years
old, but many of the core challenges still resonate, particularly needing an explicit operating model to navigate
decisions across business units.</p>