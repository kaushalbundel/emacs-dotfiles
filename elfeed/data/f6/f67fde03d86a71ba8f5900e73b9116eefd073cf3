<p>
I generally enjoy both panels and special sessions at SIGCSE over
paper sessions. Don&#39;t get me wrong, paper sessions can be great but
with those you can always read the paper and all to frequently there&#39;s
not a lot of value added beyond the paper itself. Panels and special
sessions can&#39;t just be read in the proceedings.</p>
<p>
For one panel session I had to choose between</p>
<blockquote>
<p>Enduring Lessons from ‘Computer Science for All’ for AI Education in Schools</p>
</blockquote>
<p>
and</p>
<blockquote>
<p>AI in Computing Education from Research to Practice</p>
</blockquote>
<p>
I opted for the latter. The panel was interesting but not what I
expected it to be based on the title and description. The moderator
provided a list of questions and the audience voted to order them
using an app. The moderator then asked the top ranked questions along
with additional audience questions.</p>
<p>
Many of the questions went over what is now well trodden ground - will
kids go into CS if AI will take their jobs? How can kids be motivated
to learn to program since they have AI assistents? How can we detect
the use of AI tools in assignments? What are useful current AI tools?
Not a lot new here.</p>
<p>
Still there were some interesting points that came up.</p>
<p>
One panelist discussed how through the use of AI early CS classes, CS0
and CS1 can get much further - student can do more advanced work more
quickly. I started to wonder - has anyone actually checked this? I
mean, yes it&#39;s easy to see that they can get through more material but
do they learn it? Have the later courses been adjusted to accomodate?
Has anyone studied the AI enhanced CS0/1 students vs those without it
in CS2?</p>
<p>
I&#39;ve seen countless times where students seemingly achieve advanced
results through the use of libraries and other tools along with
extreme coaching. Many code schools as well as some highly lauded
youth programs do this but the students invariable have little
retention and hit a wall or regress soon after the class or camp ends.</p>
<p>
Now I&#39;m not saying that you can&#39;t make a better early CS experience
with AI. I&#39;m just saying that one, it&#39;s not as easy as saying &#34;they
can do more&#34; and two, the jury&#39;s still out.</p>
<p>
Another &#34;positive&#34; the panel brought up was that LLMS can help or
guide students at scale - LLM based TAs and tutors. Now, I&#39;m all for
adding resources for students but people can be so hyped for some new
technology they miss the problems. In this case, adding LLM based
tutors to hide a courses shortcomings - something I wrote about
dealing with CS50 <a href="https://cestlaz.github.io/post/ai-replace-teaching/">here</a>. Another potential danger I see is using LLM
based teachers and tutors to replace human interaction.</p>
<p>
Another concern that came out of the panel when a panelist claimed
that AI tools will allow for the creation of a &#34;curriculum in a box&#34; -
the panelist framed this as a good thing - a school could offer a
class they otherwise couldn&#39;t but I read it as another sign of the
deterioration of the craft of teaching.</p>
<p>
I&#39;ll end my thoughts on this panel though with an LLM strength - that
they can be multilingual. I haven&#39;t seen this exploited yet but this
could certainly be a boon.</p>
<p>
My second panel was</p>
<blockquote>
<p>Data Science and Computer Science in K-12</p>
</blockquote>
<p>
The panel started with an interesting fact. In 2020 no states had
anything in their requirements or standards dealing with data
science. Now in 2024, nineteen do. That&#39;s some pretty fast growth.</p>
<p>
The panelists brought up a number of issues:</p>
<ul>
<li>Data Science and Computer Science frequently overlap</li>
<li>Data Science provides opportunities to develop CS skills</li>
<li>CS has DS in their standards but frequently they need to be expanded
on</li>
<li>The question as to if DS (and CS) should be standalone classes or
embedded in other subject areas</li>
</ul>
<p>It&#39;s doubtful that data science will spin off into its own discipline
in K12. It&#39;s much more likely to be integrated into other subjects but
the placement of data science and computer science is an interesting
one. Currently, the trend in the early grades is integration. In the
later K12 grades you&#39;ve got mainstream players like the College Board
with standalone classes like APCS-A and APCS Principles but also
integration efforts like <a href="https://www.bootstrapworld.org/">Bootstrap</a> which integrates into classes like
high school algebra.</p>
<p>
Now, in general I&#39;d love to see more subject integration but looking
at CS in particular, at least at the high school level, I&#39;ve always
pushed for separate classes.</p>
<p>
Why? Well, first off, separate classes means separate teachers and
ultimately departments. Yes, this further silos the system but without
it, schools won&#39;t have long term advocates for compute science and the
subject will be permanently relegated to second class citizen.</p>
<p>
Another problem with integration is that subject teachers are
overloaded as it is. Now, a science teacher or history teacher might
already be doing some data science and can just relable things but CS
is another matter.</p>
<p>
At the panel, I thought of another reason. What happens when the
curriculum changes? Bootstrap is integrated into a typical algebra
curriculum. What happens when the curriculum changes. On the one hand,
if the curriculum is just tweaked, things will probably be fine but
what if there are bigger changes. Over the course of my career there
were changes to both the Geometry and Algebra 2 and Trig
curricula. Big enough that if the embedded curriculum is scripted and
the teacher doesn&#39;t really know the CS well, that add on is going out
the window. This will likely be the case with minor changes - moving
or removing a single unit or changing an emphasis but what about
bigger changes - adding calculators in math or the types of changes
we&#39;ve seen in APCS-A over the years.</p>
<p>
This isn&#39;t even counting major changes like when we went from Algebra
to integrated math to a new version of integrated math back to Algebra
all in my career.</p>
<p>
This is all to say that integration probably isn&#39;t sustainable if you&#39;re just
providing a drop in and some PD. It can work if the teachers are truly trained to
know both their core subject and the CS or DS but that&#39;s a big ask.</p>
<p>
So those are my thoughts on the two panels I attended. Good stuff and
good food for thought. Next up paper sessions.</p>