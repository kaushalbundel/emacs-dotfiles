<p>A mentee recently mentioned a really frustrating problem that her manager seems to be ignoring.
The <em>specific problem doesn't matter</em>, so don't focus on the technical details here.</p>
<blockquote>
<p>Hey Nicole!</p>
<p>At $DAYJOB, we have some big problems and it's frustrating, I keep pointing them out and nothing happens.
I've told my manager three times about this one in particular and she keeps ignoring it.</p>
<p>The short story is we have a few deploy environments, and while I was on extended leave, some of these broke.
Now we can deploy our code to staging and production, but we don't have the dev or test environments!</p>
<p>I pointed this out to her in our 1:1 and also in a call with the team that should fix it, and she just moved past it both times.
How can I get her to prioritize fixing this problem?</p>
<p>-Alice</p>
</blockquote>
<p>I've been in Alice's shoes a number of times, and it is so frustrating.
It feels like I'm the only one with glasses on!
Getting a handle on this situation is a really important skill and there are a few good techniques for it.
There's also a meta-problem here which you need to learn to handle if you want to enter leadership roles.</p>
<h1 id="explain-the-impact-not-the-problem">Explain the impact, not the problem</h1>
<p>First, I'd like to say that pointing out a problem is <em>not</em> sufficient to getting it prioritized.
It's likely your manager was already aware of these problems already.
She's the manager of your team, after all<sup class="footnote-reference"><a href="#competent">1</a></sup>.
What's the new information you provided to her?</p>
<p>Instead, what's helpful is to remind her of the problem and then add your perspective on what the <em>impact</em> of it is.
Here's one way that could go:</p>
<blockquote>
<p>Alice: Hi Manager! I'd like to talk about a problem I've noticed on our team.</p>
<p>Manager: Oh my! What're you seeing?</p>
<p>Alice: Well, it's about the deploy environments... To recap the problem, two of our environments are broken right now, and the ops team hasn't prioritized fixing it.</p>
<p>Manager: *nods*</p>
<p>Alice: We used to use those to verify changes to this one legacy system.
We can't do that testing in staging, because &lt;REASON&gt;.
So instead, we're pushing those changes out and scrambling when bugs are reported, which is making it really hard to meet deadlines on other issues.
It's also a bottleneck on the team.
We used to have a few environments we could test in concurrently, but now we only have one, so people are staying late to use this one environment when it frees up.</p>
</blockquote>
<p>What you're doing here is assuming that your manager is aware of the problem and giving a high level summary of it, and then explaining the <em>impact</em>, which is less visible to your manager.
The way managers see that impact is often by <em>you</em> (and your peers) reporting it to them.</p>
<p>If your manager is <em>not</em> aware of the problem, she can still ask about it.
But by not explaining it again, she won't feel defensive (&quot;ugh, they're explaining this again, and obviously I've noticed!&quot;) and is in control.</p>
<p>But this is probably not enough.
If you really care about this problem and you want to fix it, you need to figure out how your manager sees it.</p>
<h1 id="reconcile-your-perspectives">Reconcile your perspectives</h1>
<p>Reconciling how you and your manager see the problem can be delicate.
It's best to approach it with <em>genuine</em> curiosity and an open mind.
Save the arguments and convincing for a different conversation, and use this one just to learn.</p>
<p>Ultimately, if two people are prioritizing something in dramatically different ways, it's likely because they see things differently.
Either they understand different facts, or they have different values.
And that's what you want to discover: does your manager see something you don't, or vice versa, or both?</p>
<p>I've had to do this so much in my roles as a staff and principal engineer, and each time the results are pretty good.
It doesn't always result in my pet problem being prioritized<sup class="footnote-reference"><a href="#management">2</a></sup>, but it made me better able to understand why it wasn't, and accept that.</p>
<p>Here's one example of how I could see that going:</p>
<blockquote>
<p>Alice: Hey Manager, remember that problem I mentioned with our broken environments?
I've noticed it's not being prioritized.
From my perspective, like so many problems we feel firsthand, it feels so <em>critical</em>, but I know there might be other more important things to do.
Could you help me understand where you see it fitting in, and what information you see here that I don't?</p>
<p>Manager: ohmygosh, thanks for asking!
It's definitely a problem that the environments don't work.
But there's so much stuff going on.
The ops team is totally swamped supporting a new feature launch and that's critical for the business, we can't delay it.
The broken environment hurts <em>us</em> but it doesn't lose us money, probably. Not much anyway.
And the impact is rough from this on our team, but after that new feature the ops team is focused on fixing the <em>staging</em> environments for other teams who have it worse.
They're as short-staffed as we are.</p>
</blockquote>
<p>Curious conversations are great for all sorts of things, too.
If you hone this skill, you'll be able to learn about a bunch of people's perspectives on <em>lots</em> of things, in or out of work.
Curiosity is disarming, and people are more willing to share.
And then when you understand that perspective, you can <em>then</em> either try to get the problem fixed, or decide that it doesn't need to be.</p>
<h1 id="talk-to-your-peers">Talk to your peers</h1>
<p>Another thing to do is talk to your teammates and figure out if they're seeing things the same as you are.
Sometimes a problem can dig itself under our skin and we can't let it go, but it's not bothering other people the same way.
Or it does bother other people, but they're not showing it.</p>
<p>This is another place where you can approach it with curiosity and try to see if your peers are bothered by the same problem and why or why not.
It's sometimes easier with peers, because the power dynamic is more balanced.</p>
<p>If you find out your peers aren't bothered by a problem, it's going to be <em>really</em> hard to get it prioritized unless it's something major and you convince your manager to wield her authority unilaterally to force it.
That's usually not a good idea for a manager to do, so this would be things like &quot;we're violating a major law&quot; and not things like &quot;the test suite is 50% too slow.&quot;</p>
<p>If your peers <em>are</em> bothered by it just like you are, then you now have an advantage and something you can work with.
You can have your team collectively present the arguments to your manager.
This way they'll be stronger from multiple perspectives, and the manager also has a tougher time saying no to a whole group than to individuals.
They might still have to say no, if there's business context that means the problem isn't solvable, so be prepared!</p>
<h1 id="moving-up-the-career-ladder">Moving up the career ladder</h1>
<p>If you want to move up the career ladder and enter either the management track or the individual contributor leadership track, you have to hone the skill of identifying which problems are important.
This goes beyond this specific problem and into the meta problem of where does it fit in the grand scheme.</p>
<p>In my role as a principal engineer, identifying problems to solve is part of it.
A bigger part is identifying which problems are <em>not</em> important to solve, which fire we can let burn a little longer while we address the main dumpster fire<sup class="footnote-reference"><a href="#dumpster-fire">3</a></sup>.</p>
<p>So if you want to move beyond Senior Engineer and into a higher level, or a different role entirely like product management or program management, this skill is essential.
The soft skills you use for it are also critical.
Learning how to put people at ease enough to tell you information, or learning how to suss it out without biasing them toward your existing opinion, is critical to the consensus building that you'll need to do in leadership roles.</p>
<hr />
<p>If you have a question or problem at work, feel free to <a href="mailto:me@ntietz.com">email it to me</a> and it might appear on this blog!</p>
<hr />
<div class="footnote-definition" id="competent"><sup class="footnote-definition-label">1</sup>
<p>It's also possible, though unlikely, that your manager <em>is</em> unaware of the problem, since you've brought it up before.
If you suspect your manager is incompetent, the techniques in this post are <em>still worth doing</em>.
They can help shift things either way, and they can also help you gain insight into what your manager <em>does</em> value and pay attention to.
This information is invaluable for working with your manager to effect useful changes.</p>
</div>
<div class="footnote-definition" id="management"><sup class="footnote-definition-label">2</sup>
<p>If you want the power to prioritize your favorite problems, entering management can give that to you. But be super careful, because that's a power you <em>cannot wield</em>, at least not often: each time you wield it and force prioritization, you break your team a little more, until eventually you have no team at all.</p>
</div>
<div class="footnote-definition" id="dumpster-fire"><sup class="footnote-definition-label">3</sup>
<p>Every company is a dumpster fire, but in its own unique ways. I would be shocked if there's a team out there that does <em>not</em> have major problems to solve that they have to choose between.</p>
</div>
