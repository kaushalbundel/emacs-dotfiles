<p>Lately, I've been working on implementing <code>ping</code> on my own as a project to keep learning Rust and to deepen my knowledge of networks. I'm just going for a super basic utility here, nothing fancy, not even all the features of <code>ping</code>. But since the language is new to me <em>and</em> my lower-level network knowledge is weak, I decided that it could be helpful to compare notes, so to speak, with the real deal itself. So that's our question: where is the source code for the actual utility <code>ping</code>?</p>
<p>Let's find out! I'm running Ubuntu, so the question is where do my binary packages come from and where does the corresponding source live? Naively, I expected this to be super easy to find. It's not <em>hard</em> to find, for my system (Ubuntu), but it's not as easy as it would be on some others like Gentoo.</p>
<p>The first step I took was, naturally, to turn to Google and search &quot;ping source code&quot;. The first search result is a <a href="https://gist.github.com/kbaribeau/4495181">GitHub gist</a>, which links to a <a href="https://ftp.arl.army.mil/~mike/ping.html">US Army page</a> written by the original author of ping. Cool, so this is seems like the original source! This is really cool and a great historical artifact. Is this the same version that I'm running on my desktop, though? We need to dig deeper and see what's running on the local machine.</p>
<p>If we use <code>man ping</code> to look at the manual page for ping, we see &quot;System Manager's Manual: iputils&quot; at the top, which is our first hint at where ping comes from on our system: possibly the package is named iputils, and I do have a package named iputils-ping installed. From here, we can find the <a href="https://packages.ubuntu.com/source/bionic/iputils">source package</a> and... the links on that page to the Debian git repos are broken. Sigh.</p>
<p>Back we go to Google and we find the <a href="https://packages.debian.org/source/buster/iputils">source package for iputils</a> on Debian, figuring it's probably the same. And now we're in luck, and we can get to the iputils git repo that Ubuntu presumably draws from by way of Debian: <a href="https://salsa.debian.org/debian/iputils">https://salsa.debian.org/debian/iputils</a></p>
<p>And thus we find the source: <a href="https://salsa.debian.org/debian/iputils/-/blob/master/ping.c">https://salsa.debian.org/debian/iputils/-/blob/master/ping.c</a> and <a href="https://salsa.debian.org/debian/iputils/-/blob/master/ping.h">https://salsa.debian.org/debian/iputils/-/blob/master/ping.h</a></p>
<p>It clocks in at a total of approximately 2k lines of code (well, there is also shared code), which is not much bigger than the original source. It's a marvel to me that this gem of software has stayed small, concise, and <em>useful</em> for decades without acquiring much bloat, without changing forms. May more software be like ping.</p>
<p>Now that we have the source, there's a lot more to learn. For example, if you receive pings intended for another process (because that happens with raw sockets, it turns out), you can setup a filter with Berkeley Packet Filter, and ignore any pings that aren't for you! This is really cool and something that I need to learn more about.</p>
<p>What other gems am I missing out there?</p>
