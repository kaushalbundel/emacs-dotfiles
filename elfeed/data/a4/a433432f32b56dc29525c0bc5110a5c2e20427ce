<p>
One of the things I want to do now that I have some time is get my
head around all the modern AI stuff. I&#39;m starting with a review or
things I&#39;ve already done by going through Andrew Ng&#39;s Coursera ML
class. I&#39;ll probably continue with his courses but I&#39;m certainly open
to any suggestions (specifically for a CS guy who&#39;s not so strong on
the math side).</p>
<p>
This means diving back into Python even though Clojure is usually my
weapon of choice. I thought I&#39;d see how the platform has changed.</p>
<p>
First up <a href="https://www.anaconda.com/">Anaconda</a> which is a platform and package manager for
Python. I opted for <a href="https://docs.anaconda.com/free/miniconda/index.html">Miniconda</a> which just gives the basics and I can
always add anything missing later.</p>
<p>
See the previous two links to install Anaconda or Miniconda. The video
goes over basic use. It&#39;s a lot like virtualenv. You can set up an
Python environment with specific packages and then activate or
deactivate whichever environment you wish to work under.</p>
<p>
On the Emacs side, I installed the package conda as follows:</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span> (use-package conda :straight <span style="color:#66d9ef">t</span>
</span></span><span style="display:flex;"><span> :config
</span></span><span style="display:flex;"><span> (conda-env-initialize-interactive-shells)
</span></span><span style="display:flex;"><span> (conda-env-initialize-eshell))</span></span></code></pre></div>
</div>
<p>
And that was pretty much it. To activate an particular environment we
just use <code>conda-env-actiate</code>. Again, this is covered in the video.</p>
<p>
Next up is <a href="https://direnv.net/">direnv</a>. This lets you customize your environment per
directory. You can do things like set specific environment variables
or even, in our case, activate a conda environment just by going into
a project directory. Basic installation instructions can be found on
the home page.</p>
<p>
To set up direnv to work with Anaconda/Miniconda though took a bit of
work. Between a few web sites and videos, I found that this worked.</p>
<p>
First, I had to create a file named <code>.direnvrc</code> in my home directory
with these contents:</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span> layout_conda() {
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> Ref Url: https://github.com/direnv/direnv/wiki/Python
</span></span><span style="display:flex;"><span> <span style="color:#960050;background-color:#1e0010">#</span> local ANACONDA_HOME=<span style="color:#960050;background-color:#1e0010">”</span>${HOME}/anaconda3<span style="color:#e6db74">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> # PATH_add “$ANACONDA_HOME”/bin1
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> if [ -n &#34;</span>$1<span style="color:#e6db74">&#34; ]; then
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> # Explicit environment name from layout command.
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> local env_name=&#34;</span>$1<span style="color:#e6db74">&#34;
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> source activate ${env_name}
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> elif (grep -q name: environment.yml); then
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> # Detect environment name from `environment.yml` file in `.envrc` directory
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> source activate `grep name: environment.yml | sed -e ‘s/name: //’ | cut -d
</span></span></span><span style="display:flex;"><span><span style="color:#e6db74"> &#34;</span><span style="color:#960050;background-color:#1e0010">‘</span><span style="color:#e6db74">&#34; -f 2 | cut -d ‘&#34;</span><span style="color:#960050;background-color:#1e0010">‘</span> -f <span style="color:#ae81ff">2</span><span style="color:#f92672">`</span>
</span></span><span style="display:flex;"><span> else
</span></span><span style="display:flex;"><span> (&gt;&amp;2 echo No environment specified)<span style="color:#75715e">;</span>
</span></span><span style="display:flex;"><span> exit <span style="color:#ae81ff">1</span><span style="color:#75715e">;</span>
</span></span><span style="display:flex;"><span> fi<span style="color:#75715e">;</span>
</span></span><span style="display:flex;"><span> }</span></span></code></pre></div>
</div>
<p>
You might have to play with it if you&#39;re not using the miniconda
installation defaults.</p>
<p>
Next, I had to edit my .zshrc:</p>
<div class="src src-sh">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-sh" data-lang="sh"><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> export iam<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>whoami<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span> export CONDA_HOME<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/home/</span><span style="color:#e6db74">${</span>iam<span style="color:#e6db74">}</span><span style="color:#e6db74">/miniconda3&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#f92672">[[</span> <span style="color:#e6db74">&#34;:</span><span style="color:#e6db74">${</span>PATH<span style="color:#e6db74">}</span><span style="color:#e6db74">:&#34;</span> !<span style="color:#f92672">=</span> *<span style="color:#e6db74">&#34;:</span><span style="color:#e6db74">${</span>CONDA_HOME<span style="color:#e6db74">}</span><span style="color:#e6db74">/bin:&#34;</span>* <span style="color:#f92672">]]</span> <span style="color:#f92672">&amp;&amp;</span> export PATH<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#e6db74">${</span>CONDA_HOME<span style="color:#e6db74">}</span><span style="color:#e6db74">/bin:</span><span style="color:#e6db74">${</span>PATH<span style="color:#e6db74">}</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># &lt;&lt;&lt; my export init &lt;&lt;&lt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># &gt;&gt;&gt; conda initialize &gt;&gt;&gt;</span>
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># !! Contents within this block are managed by &#39;conda init&#39; !!</span>
</span></span><span style="display:flex;"><span> __conda_setup<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span><span style="color:#e6db74">&#39;/home/zamansky/miniconda3/bin/conda&#39;</span> <span style="color:#e6db74">&#39;shell.zsh&#39;</span> <span style="color:#e6db74">&#39;hook&#39;</span> 2&gt; /dev/null<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> $? -eq <span style="color:#ae81ff">0</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span> eval <span style="color:#e6db74">&#34;</span>$__conda_setup<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">else</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">if</span> <span style="color:#f92672">[</span> -f <span style="color:#e6db74">&#34;/home/zamansky/miniconda3/etc/profile.d/conda.sh&#34;</span> <span style="color:#f92672">]</span>; <span style="color:#66d9ef">then</span>
</span></span><span style="display:flex;"><span> . <span style="color:#e6db74">&#34;/home/zamansky/miniconda3/etc/profile.d/conda.sh&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">else</span>
</span></span><span style="display:flex;"><span> export PATH<span style="color:#f92672">=</span><span style="color:#e6db74">&#34;/home/zamansky/miniconda3/bin:</span>$PATH<span style="color:#e6db74">&#34;</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span> <span style="color:#66d9ef">fi</span>
</span></span><span style="display:flex;"><span> unset __conda_setup
</span></span><span style="display:flex;"><span> <span style="color:#75715e"># &lt;&lt;&lt; conda initialize &lt;&lt;&lt;</span>
</span></span><span style="display:flex;"><span>
</span></span><span style="display:flex;"><span> export LANG<span style="color:#f92672">=</span>en_US.UTF-8
</span></span><span style="display:flex;"><span> eval <span style="color:#e6db74">&#34;</span><span style="color:#66d9ef">$(</span>direnv hook zsh<span style="color:#66d9ef">)</span><span style="color:#e6db74">&#34;</span></span></span></code></pre></div>
</div>
<p>
Some of that was added when I installed direnv and followed those
directions. I think for the direnv Anaconda support I added the first
two lines and the last one.</p>
<p>
Finally, in your project&#39;s root directory create a file named <code>.envrc</code>
which contains the line <code>layout conda name</code> where <strong>name</strong> is replaced with
the name of the conda environment you want.</p>
<p>
The first time you go into the directory it will tell you that you
haven&#39;t allowed direnv to work there yet and you have to enter <code>direnv
allow</code>. After you do that, every time you enter that directory it will
activate your conda environment, leave it, it will deactivate it.</p>
<p>
In Emacs, I found two packages that worked pretty much the same. One
named <code>direnv</code> and the other <code>envrc</code>. I opted for envrc.</p>
<p>
You simply add:</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span> (use-package envrc :straight <span style="color:#66d9ef">t</span>
</span></span><span style="display:flex;"><span> :config (envrc-global-mode))</span></span></code></pre></div>
</div>
<p>
to your config and when you open a file in that directory, it will
use direnv.</p>
<p>
<strong>Important note:</strong></p>
<p>
That&#39;s pretty much it. This all worked on my desktop but it&#39;s giving
me problems on my laptop. It appears that conda mode isn&#39;t working. It
allows me to select the environment but it doesn&#39;t actually activate
it. I think it&#39;s a path issue even though I think both my desktop and
laptop are the same. I&#39;ll update this once I figure out what&#39;s up on
the laptop side.</p>
<p>
All in all, I&#39;m pretty happy with this. I love that I can
automatically start an environment just by accessing a file in the
directory. Too many times, I forget and mess things up.</p>
<p>
The video steps through everything and demos both packages:</p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/UrJoBaJv5kA?si=_W-OU3RG7o3K5LQ4" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<p>
Enjoy!</p>