<p><code class="language-plaintext highlighter-rouge">beframe</code> enables a frame-oriented Emacs workflow where each frame has
access to the list of buffers visited therein.  In the interest of
brevity, we call buffers that belong to frames “beframed”.</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">beframe</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/beframe">https://protesilaos.com/emacs/beframe</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/beframe-changelog">https://protesilaos.com/emacs/beframe-changelog</a></li>
  <li>Git repo on SourceHut: <a href="https://git.sr.ht/~protesilaos/beframe">https://git.sr.ht/~protesilaos/beframe</a>
    <ul>
      <li>Mirrors:
        <ul>
          <li>GitHub: <a href="https://github.com/protesilaos/beframe">https://github.com/protesilaos/beframe</a></li>
          <li>GitLab: <a href="https://gitlab.com/protesilaos/beframe">https://gitlab.com/protesilaos/beframe</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Mailing list: <a href="https://lists.sr.ht/~protesilaos/general-issues">https://lists.sr.ht/~protesilaos/general-issues</a></li>
  <li>Video demo: <a href="https://protesilaos.com/codelog/2023-02-28-emacs-beframe-demo/">https://protesilaos.com/codelog/2023-02-28-emacs-beframe-demo/</a></li>
  <li>Backronym: Buffers Encapsulated in Frames Realise Advanced
Management of Emacs.</li>
</ul>

<p>Below are the release notes</p>

<hr />

<p><code class="language-plaintext highlighter-rouge">beframe</code> is in a stable state. This release formalises a set of
stability enhancements and quality-of-life improvements.</p>

<h2>The menu bar helps you discover Beframe commands</h2>

<p>A submenu with Beframe commands is available to users of
<code class="language-plaintext highlighter-rouge">menu-bar-mode</code>. It is available at <code class="language-plaintext highlighter-rouge">Buffers &gt; BEFRAME buffers</code>. Check
the original announcement, which includes screenshots:
<a href="https://protesilaos.com/codelog/2023-10-08-emacs-beframe-menu/">https://protesilaos.com/codelog/2023-10-08-emacs-beframe-menu/</a>.</p>

<p>[ As an aside, never tell a new user to add <code class="language-plaintext highlighter-rouge">(menu-bar-mode -1)</code> to
  their Emacs init file. It is not helpful. ]</p>

<h2>The sample integration with <code class="language-plaintext highlighter-rouge">consult</code> can flip between recent buffers</h2>

<p>In the manual of <code class="language-plaintext highlighter-rouge">beframe</code> there is a section about augmenting the
<code class="language-plaintext highlighter-rouge">consult-buffer</code> command with a new source of beframed buffers
(buffers specific to the current frame). Edgar Vincent made a change
that sorts buffers by last viewed, meaning that the previous buffer is
at the top of the list. The change is within the ~15 line limit and
thus Edgar does not need to assign copyright to the Free Software
Foundation. Discussed on the mailing list:
<a href="https://lists.sr.ht/~protesilaos/general-issues/%3C878r97fxmc.fsf%40protesilaos.com%3E">https://lists.sr.ht/~protesilaos/general-issues/%3C878r97fxmc.fsf%40protesilaos.com%3E</a>.</p>

<p>Refer to the manual for the code to integrate <code class="language-plaintext highlighter-rouge">beframe</code> with <code class="language-plaintext highlighter-rouge">consult</code>:
<a href="https://protesilaos.com/emacs/beframe#h:1c2d3d64-aa7b-4585-a418-ccedbb548b38">https://protesilaos.com/emacs/beframe#h:1c2d3d64-aa7b-4585-a418-ccedbb548b38</a>.</p>

<p>NOTE that you do not need <code class="language-plaintext highlighter-rouge">consult</code> to use <code class="language-plaintext highlighter-rouge">beframe</code>: (i) the
<code class="language-plaintext highlighter-rouge">beframe-mode</code> makes the regular <code class="language-plaintext highlighter-rouge">switch-to-buffer</code> work in a beframed
way and/or (ii) use the <code class="language-plaintext highlighter-rouge">beframe-buffer-menu</code> to get a list of the
beframed buffers (call the latter command with a prefix key (<code class="language-plaintext highlighter-rouge">C-u</code> by
default) to select a frame whose buffers you want to list).</p>

<h2>The <code class="language-plaintext highlighter-rouge">beframe-rename-function</code> can take a <code class="language-plaintext highlighter-rouge">nil</code> value</h2>

<p>This was always the intent, though the code did not honour it. Thanks
to Karthik Chikmagalur for reporting the bug on the mailing list:
<a href="https://lists.sr.ht/~protesilaos/general-issues/%3C87a5w8yi1n.fsf%40gmail.com%3E">https://lists.sr.ht/~protesilaos/general-issues/%3C87a5w8yi1n.fsf%40gmail.com%3E</a>.</p>

<h2>General refinements</h2>

<ul>
  <li>
    <p>Commands that prompt for a frame (e.g. <code class="language-plaintext highlighter-rouge">beframe-assume-frame-buffers</code>)
no longer try to perform their work if a single Emacs frame is
available. Instead, they return a <code class="language-plaintext highlighter-rouge">user-error</code>.</p>
  </li>
  <li>
    <p>The buffer that was current when a new frame was created is no
longer part of the new frame’s buffer list. This means that the new
frame starts clean, including only the buffer specified in the user
option <code class="language-plaintext highlighter-rouge">beframe-global-buffers</code>.</p>
  </li>
  <li>
    <p>The code that renames a new frame based is better at inferring the
correct name. It now finds the <code class="language-plaintext highlighter-rouge">project.el</code> name, if available. The
manual explains how to use Beframe with projects:
<a href="https://protesilaos.com/emacs/beframe#h:5b751614-8749-4aa8-aaed-f181beaddc57">https://protesilaos.com/emacs/beframe#h:5b751614-8749-4aa8-aaed-f181beaddc57</a>
(to me, this is a killer feature).</p>
  </li>
  <li>
    <p>Simplified how frames are set up. This guarantees that our functions
are called in the desired order.</p>
  </li>
</ul>