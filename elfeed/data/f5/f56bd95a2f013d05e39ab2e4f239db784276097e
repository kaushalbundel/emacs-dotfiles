<p><img alt="Casual Main Menu Screenshot" src="http://yummymelon.com/devnull/images/announcing-casual/casual-main-menu.png" width="75%" /></p>
<p>Announcing the first public release of <strong><a href="https://melpa.org/#/casual" title="Casual on MELPA">Casual</a></strong> - an opinionated <a href="https://github.com/magit/transient">Transient</a>-based porcelain to support the casual usage of Emacs <a href="https://www.gnu.org/software/emacs/manual/html_mono/calc.html">Calc</a>.</p>
<p>It’s now on <a href="https://melpa.org/#/casual" title="Casual on MELPA">MELPA</a> and requires Emacs 29.1+.</p>
<h1>Install</h1>
<p>Add the following lines to your Emacs initialization file.</p>
<div class="highlight"><pre><span></span><code>(require 'casual)
(define-key calc-mode-map (kbd "C-o") 'casual-main-menu)
</code></pre></div>

<h1>Motivation</h1>
<p>While Emacs Calc has an embarrassingly rich feature set, for many users this capability is inaccessible due its dependence on an overwhelming number of keybindings to access them. These keybindings have a steep learning curve that is quickly lost if not in constant use.</p>
<p>Menus are a user interface (UI) affordance that offer users discoverability and recall. Providing a hierarchical menu UI over Calc greatly improves its casual use.</p>
<h2>Goals</h2>
<ul>
<li>To provide a keyboard-driven UI to Calc that is menu based.</li>
<li>To allow users experienced with scientific calculators to casually use Calc without having to reference its Info pages.</li>
</ul>
<h2>Non-Goals</h2>
<ul>
<li>Full coverage of all Calc commands. Casual is not intended to be a power user tool.</li>
<li>Strict adherence to default Calc keybindings. Calc’s prompt-first interface resulted in a command keybinding design that embeds context in the key sequence (e.g. <code>v</code> for vector, <code>b</code> for binary). Hierarchical menus make this context implicit, allowing for key reuse in different contexts.</li>
<li>Strict adherence to Calc command naming. While Casual is mostly in alignment with Calc’s command naming, there are cases where it will make an opinionated change if  the name is deemed too vague or idiomatic.</li>
<li>UX Stability (for now). Given that Casual is early in its life-cycle, expect changes to its user experience in terms of menu hierarchy and keybinding choices in future releases.</li>
</ul>
<h1>Usage</h1>
<ol>
<li>Invoke <code>M-x calc</code> to launch Calc.</li>
<li>When the point is in the Calc window, invoke <code>C-o</code> (or a binding of your choosing) to launch the Casual menu.</li>
</ol>
<h1>Calc Basics</h1>
<p>It helps to know some basics about Calc.</p>
<ul>
<li>Calc is a stack-based calculator that supports both RPN and algebraic style entry.<ul>
<li>By default it uses RPN entry, but this can be changed to algebraic.</li>
</ul>
</li>
<li>Stack based operations are always RPN-style.</li>
<li>Undo has the keybinding <code>U</code>, redo is <code>D</code>.</li>
<li>The top of the stack is referred to as <code>1:</code></li>
<li>Calc vectors are punctuated with <code>[</code> and <code>]</code> (e.g. <code>[2 3]</code>)  Matrix values are represented as vectors within a vector. For example, <code>[[1 0] [0 1]]</code> is a square diagonal matrix.</li>
<li>Calc vector indexes are 1-offset.</li>
<li>Intervals<ul>
<li>Inclusive intervals are represented as [𝑛..𝑚], where 𝑛 &lt; 𝑚.</li>
<li>Exclusive intervals are represented as (𝑛..𝑚), where 𝑛 &lt; 𝑚.</li>
<li>Any combination of lower and upper bounds set to be inclusive or exclusive is supported.</li>
</ul>
</li>
<li>Complex numbers are entered as (𝑟, 𝑖), where 𝑟 is the real part and 𝑖 is the imaginary.</li>
<li>Radix numbers are entered as 𝑏#𝑛 where 𝑏 is the base value and 𝑛 is the number. For example entering <code>2#0101</code> will put <code>5</code> on the stack.</li>
<li>H:M:S values are default entered as ℎ@ 𝑚“ 𝑠’.</li>
<li>Org-mode active timestamps can be entered into Calc.</li>
<li>The top of the stack (1:) can be edited by pressing the <code>`</code> key.</li>
<li>Entering a single quote (’) will prompt you for an algebraic entry.</li>
</ul>
<h1>Closing Thoughts</h1>
<p>Back in the early 90’s I had the happy circumstance of owning a HP-28S. This calculator heavily influenced the feature set of Emacs Calc, but despite that Calc was frustrating to use because its primary interface (a prompt) was exactly the opposite of the interface provided by the HP-28S: an array of buttons to discover and press.</p>
<p><img alt="HP-28S photo" src="http://yummymelon.com/devnull/images/announcing-casual/cchoi-hp28.jpeg" width="70%" /></p>
<p>With keyboard-driven menus, I’d assert that Casual goes a long way towards fulfilling Calc’s promise to provide a HP-28 at your fingertips with the added bonus of integration into your digital life because it all lives in Emacs.</p>
<p>As Casual is new, I’m looking for early adopters! Your <a href="https://github.com/kickingvegas/Casual/discussions">feedback</a> is welcome as it will likely impact Casual’s evolution, particularly with regards to UI.</p>
<p>If you <em>really</em> like Casual, consider supporting its development and maintenance though <a href="https://www.buymeacoffee.com/kickingvegas">buymeacoffee</a>.</p>
<p>Thanks for reading and happy calculating!</p>