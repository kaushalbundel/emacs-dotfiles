<p>And that's it.
My batch at RC ended yesterday.
I have so many thoughts and feelings from this time, but it's going to take time to coalesce them all.
I'll write up my Return Statement<sup class="footnote-reference"><a href="#1">1</a></sup> in a week or two, but for now, here's what I was up to the last week!</p>
<p>Mostly, this last week was an attempt to speedrun <a href="https://craftinginterpreters.com/">Crafting Interpreters</a>.
This book has been on my shelf for a while, and I got started on it after I decided to stop learning Idris.
A friend from this batch has done really cool work going through Crafting Interpreters, so I wanted to see how much I could get through while we can still easily pair program on it.</p>
<p>Turns out, a lot!
In the last 1.5 weeks or so, I read through the first 11 chapters and implemented everything from the first 10.
All that's left is doing chapter 11 (which should fix a hole in the semantics and improve performance) and then read two chapters focused on classes!
It'll be really cool to see how object-oriented programming can be implemented at the language level.</p>
<p>Overall this book has been a great experience so far.
So far the benefits have been:</p>
<ul>
<li><strong>Greater mechanical sympathy for parsers.</strong>
It's easier to understand errors coming out of a parser having written a basic one!
Now when parsers leak some details out in errors, it's less confusing.
This alone is <strong>a great reason to read the book.</strong></li>
<li><strong>Got over my fear of parsers/interpreters.</strong>
Before this, parsing was very intimidating.
I wrote a little parser for my chess projects to load in <a href="https://www.chessprogramming.org/Portable_Game_Notation">PGN files</a>, but that was hard and confusing and didn't work well.
Now that I've seen a reasonably-structured parser and written it myself, I'm a lot more confident that I can and will write more parsers in the future!
I'm currently planning on implementing a query language for <a href="https://sr.ht/~ntietz/isabella-db/">my chess database</a>.</li>
<li><strong>Gaining a better appreciation for the nice things we have.</strong>
After writing this much of a language, honestly, I'm extremely impressed and grateful that <strong>other languages work well at all</strong>. This stuff is <em>hard</em>.</li>
</ul>
<p>I'm going to keep running through Crafting Interpreters over the next few weeks, but with less intensity since I'm going back to work on Monday.
I think part 2 will be just as fruitful as part 1, since I'll get to see how a (bytecode) compiler works!
Maybe my chess database query language will compile down to bytecode for the query engine ðŸ˜Ž.</p>
<p>This week also contained a one-day build of a useful tool for my own use.
Since I wrote about that <a href="/blog/one-day-build-molecule-reader/">earlier this week</a>, I won't say much here except that I think the reports of Rust being bad for prototyping are are greatly exaggerated.</p>
<p>This week has also led to me leaning into doing type-driven development with Rust, and leveraging tooling to generate a lot more of my code for me.
(Not AI generation, but automatic generation of some boilerplate.)
I'll write more about that soon, too.</p>
<p>The rest of this week was coffee chats with folks and reflections on our batches and what is next for us.
I'm really excited to see what all my new friends end up doing next.
And I hope they stay in touch and stay active on Zulip.</p>
<p>As for me, I spent some time this week making sure that my life is structured in a way that means I can keep doing some of the most rewarding things from RC.
Specifically, that means <strong>I've let go of some projects</strong> (Advent of Code, learning theorem provers with friends) to be able to focus on the things that are most important to me.
Here's what I'm going to keep on with:</p>
<ul>
<li><strong>Consistent writing.</strong>
This has been tremendously rewarding, and I'm going to keep up with it post-batch as well as I can.
I've setup a dedicated chunk of writing focus time each week, with some folks joining in.
I'm optimistic.</li>
<li><strong>Crafting Interpreters and other technical books.</strong>
This book is such a joy, and it's inspirational for me.
This is the sort of writing I aspire to eventually.
I'm going to keep up with it and then work some other technical books, like <a href="https://bookshop.org/p/books/cpython-internals-your-guide-to-the-python-3-interpreter-anthony-shaw/16978914">CPython Internals</a> (we have a reading group starting in January!).</li>
<li><strong>The chess database.</strong>
This project has taught me so much, and is useful to boot.
I'm going to keep going with it as a slow burn so that it's sustainable and keeps going.</li>
<li><strong>Coffee chats.</strong>
Everyone at RC has been so great, so I'm going to keep in touch with folks.
A lower intensity and lower frequency, but still there.</li>
</ul>
<p>In the next two weeks, I should have a Return Statement posted.
I have a few other blog posts in the works, too.
If you made it this far, thanks for reading!</p>
<hr />
<div class="footnote-definition" id="1"><sup class="footnote-definition-label">1</sup>
<p>Return Statements are a tradition where Recursers write a post about what they did there and some reflections.
I'm waiting a few weeks for everything to gel before writing mine, because right now I'm a maelstrom of feelings.</p>
</div>
