<p>In this post, I describe how I’m hosting my own music streaming service with
NixOS, Jellyfin and Manet on Hetzner for €6 / month.</p>
<p>If you know your way around servers, this is neither a novel nor a complicated
setup—quite the opposite; the beauty of this configuration lies in its
simplicity.</p>

<h2><a class="anchor" href="https://arne.me/feed.xml#table-of-contents" id="table-of-contents"></a>Table of Contents</h2>
<ul>
<li><a href="https://arne.me/feed.xml#set-up-a-vm-with-nixos">Set up a VM with NixOS</a></li>
<li><a href="https://arne.me/feed.xml#install-and-configure-packages">Install and configure packages</a></li>
<li><a href="https://arne.me/feed.xml#configure-jellyfin">Configure Jellyfin</a></li>
<li><a href="https://arne.me/feed.xml#apps">Apps</a></li>
<li><a href="https://arne.me/feed.xml#conclusion">Conclusion</a></li>
</ul>
<h2><a class="anchor" href="https://arne.me/feed.xml#set-up-a-vm-with-nixos" id="set-up-a-vm-with-nixos"></a>Set up a VM with NixOS</h2>
<p>The smallest (and cheapest) VM on Hetzner Cloud, CX11 with 1 VCPU and 2 GB
RAM, is more than enough<sup class="footnote-ref"><a data-footnote-ref="data-footnote-ref" href="https://arne.me/feed.xml#fn-1" id="fnref-1">1</a></sup>.</p>
<p>Because my music collection is still pretty small, I’ve decided to go with
Hetzner volumes.
If you have more than 100 GB of music, I’d recommend looking into a different
storage solution in combination with <code>rclone</code>, see
<a href="https://arne.me/blog/plex-on-nixos/#setting-up-storage">the storage section of an earlier post</a>.</p>
<p>Hetzner doesn’t have a one-click NixOS image, so I chose any image and followed
the “traditional” ISO installation as described in this repo:
<a href="https://github.com/nix-community/nixos-install-scripts/tree/master/hosters/hetzner-cloud">nixos-install-scripts</a>.
The <a href="https://nixos.wiki/wiki/Install_NixOS_on_Hetzner_Cloud">NixOS docs</a> also
recommend <a href="https://github.com/elitak/nixos-infect">nixos-infect</a>—if you take
this path, I’d be genuinely interested to <a href="https://arne.me/contact">hear how it worked</a>.</p>
<p>Then, just to be safe, I ran <code>nix-channel --update</code> and
<code>nixos-rebuild switch --upgrade</code> on the VM to upgrade everything to the latest
version.</p>
<p>After finding my attached volume with <code>ls /dev/sd*</code> and mounting it with
<code>mount /dev/sdb /mnt/media</code> (replace <code>/dev/sdb</code> with the path of your volume),
I ran <code>nixos-generate-config</code> to regenerate the hardware configuration and
automatically mount it on the next boot.</p>
<p>Because this VM is only for music, I didn’t do anything to harden the vm.
If you want more security, take a look at the excellent
<a href="https://xeiaso.net/blog/paranoid-nixos-2021-07-18/">Paranoid NixOS Setup</a>
article by Xe.</p>
<h2><a class="anchor" href="https://arne.me/feed.xml#install-and-configure-packages" id="install-and-configure-packages"></a>Install and configure packages</h2>
<p>On the VM, I opened <code>/etc/nixos/configuration.nix</code> in a text editor.
Nano comes installed out of the box, but you can get vim in an ephemeral shell
with <code>nix-shell -p vim</code>.</p>
<p>In that file, I started by changing <code>networking.hostName</code> and <code>time.timeZone</code>.
Subsequently, I configured the installed packages:</p>
<pre class="language-nix"><span class="source nix"><span class="variable parameter name nix">environment</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">systemPackages</span> <span class="invalid illegal">=</span> <span class="invalid illegal reserved nix">with</span> <span class="variable parameter name nix">pkgs</span><span class="invalid illegal">;</span> <span class="punctuation definition list nix">[</span>
  <span class="variable parameter name nix">jellyfin</span>
  <span class="variable parameter name nix">jellyfin-web</span>
  <span class="variable parameter name nix">jellyfin-ffmpeg</span>
  <span class="variable parameter name nix">caddy</span>
  <span class="variable parameter name nix">logrotate</span>
<span class="punctuation definition list nix">]</span><span class="invalid illegal">;</span>
</span></pre>
<h3><a class="anchor" href="https://arne.me/feed.xml#jellyfin" id="jellyfin"></a>Jellyfin</h3>
<p>Jellyfin is an open-source media server, comparable to Plex.
I installed Jellyfin itself (<code>jellyfin</code>), the official Jellyfin web client
(<code>jellyfin-web</code>), and a modified version of FFmpeg for
<a href="https://jellyfin.org/docs/general/administration/hardware-acceleration/#supported-acceleration-methods">hardware acceleration</a> (<code>jellyfin-ffmpeg</code>).
Let’s enable Jellyfin:</p>
<pre class="language-nix"><span class="source nix"><span class="variable parameter name nix">services</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">jellyfin</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">enable</span> <span class="invalid illegal">=</span> <span class="constant language nix">true</span><span class="invalid illegal">;</span>
</span></pre>
<h3><a class="anchor" href="https://arne.me/feed.xml#caddy" id="caddy"></a>Caddy</h3>
<p>We need a reverse proxy, mostly for automatic HTTPS.
I chose Caddy because the configuration is the shortest<sup class="footnote-ref"><a data-footnote-ref="data-footnote-ref" href="https://arne.me/feed.xml#fn-2" id="fnref-2">2</a></sup>:</p>
<pre class="language-nix"><span class="source nix"><span class="variable parameter name nix">services</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">caddy</span> <span class="invalid illegal">=</span> <span class="punctuation definition attrset-or-function nix">{</span>
  <span class="entity other attribute-name multipart nix">enable</span> <span class="keyword operator bind nix">=</span> <span class="constant language nix">true</span><span class="punctuation terminator bind nix">;</span>
  <span class="entity other attribute-name multipart nix">virtualHosts</span>.<span class="string quoted double nix"><span class="punctuation definition string double start nix">"</span>jellyfin.example.com<span class="punctuation definition string double end nix">"</span></span>.<span class="entity other attribute-name multipart nix">extraConfig</span> <span class="keyword operator bind nix">=</span> <span class="string quoted other nix"><span class="punctuation definition string other start nix">''</span>
    reverse_proxy 127.0.0.1:8096
  <span class="punctuation definition string other end nix">''</span></span><span class="punctuation terminator bind nix">;</span>
<span class="punctuation definition attrset nix">}</span><span class="invalid illegal">;</span>
<span class="variable parameter name nix">networking</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">firewall</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">allowedTCPPorts</span> <span class="invalid illegal">=</span> <span class="punctuation definition list nix">[</span> <span class="constant numeric nix">80</span> <span class="constant numeric nix">443</span> <span class="punctuation definition list nix">]</span><span class="invalid illegal">;</span>
</span></pre>
<p>You should replace <code>jellyfin.example.com</code> with the domain you want to use for
your Jellyfin setup. Make sure to point <code>A</code> and <code>AAAA</code> records in your domain
provider to the public IP addresses of the VM.</p>
<h3><a class="anchor" href="https://arne.me/feed.xml#logrotate" id="logrotate"></a>Logrotate</h3>
<p>After a few days, I was uploading more music and noticed, that my SFTP uploads
were stalled.
After hours of debugging, I found out, that this apparently was due to a very
large <code>/var/log/auth.log</code> beeing too large<sup class="footnote-ref"><a data-footnote-ref="data-footnote-ref" href="https://arne.me/feed.xml#fn-3" id="fnref-3">3</a></sup>.</p>
<p><code>logrotate</code> fixes this by automatically rotating, compressing and removing this
(and other) log files.
It’s enabled like this:</p>
<pre class="language-nix"><span class="source nix">  <span class="variable parameter name nix">services</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">logrotate</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">enable</span> <span class="invalid illegal">=</span> <span class="constant language nix">true</span><span class="invalid illegal">;</span>
</span></pre>
<h3><a class="anchor" href="https://arne.me/feed.xml#auto-upgrade" id="auto-upgrade"></a>Auto-upgrade</h3>
<p>To keep maintenance low, I enable automatic system upgrades using the following
configuration:</p>
<pre class="language-nix"><span class="source nix"><span class="variable parameter name nix">system</span><span class="keyword operator nix">.</span><span class="variable parameter name nix">autoUpgrade</span> <span class="invalid illegal">=</span> <span class="punctuation definition attrset-or-function nix">{</span>
  <span class="entity other attribute-name multipart nix">enable</span> <span class="keyword operator bind nix">=</span> <span class="constant language nix">true</span><span class="punctuation terminator bind nix">;</span>
  <span class="entity other attribute-name multipart nix">allowReboot</span> <span class="keyword operator bind nix">=</span> <span class="constant language nix">true</span><span class="punctuation terminator bind nix">;</span>
<span class="punctuation definition attrset nix">}</span>
</span></pre>
<p>This checks every day at 4:40 am by default, so the chances of the VM rebooting
while I want to listen to music are very slim.</p>
<h3><a class="anchor" href="https://arne.me/feed.xml#apply-changes" id="apply-changes"></a>Apply changes</h3>
<p>Run <code>nixos-rebuild switch</code> to apply the configuration.</p>
<h2><a class="anchor" href="https://arne.me/feed.xml#configure-jellyfin" id="configure-jellyfin"></a>Configure Jellyfin</h2>
<p>Go to the address of your server and follow the installation wizard to set up
Jellyfin<sup class="footnote-ref"><a data-footnote-ref="data-footnote-ref" href="https://arne.me/feed.xml#fn-4" id="fnref-4">4</a></sup>.
Create a library for your music and upload some to <code>/mnt/media</code>.</p>
<h2><a class="anchor" href="https://arne.me/feed.xml#apps" id="apps"></a>Apps</h2>
<p>Having a good mobile app is crucial for me.
The official Jellyfin apps are excellent for configuring Jellyfin, but not
great for listening to music.</p>
<p>When I discovered <a href="https://tilo.dev/manet/">Manet</a>, an iOS app, it changed
everything.
While it looks and feels very similar to Apple Music, it works significantly
better.
André, the developer who is developing this on the side, is super responsive and
quick to fix the occasional bug.
Seriously, if you use Jellyfin and iOS, and not use this app, you’re missing out.
Did I mention that it’s beautiful and free?</p>
<p>On the web, I’m using the web client.
It’s not great, but it’s fine.
Hoping for Manet on macOS one day<sup class="footnote-ref"><a data-footnote-ref="data-footnote-ref" href="https://arne.me/feed.xml#fn-5" id="fnref-5">5</a></sup>.</p>
<h2><a class="anchor" href="https://arne.me/feed.xml#conclusion" id="conclusion"></a>Conclusion</h2>
<p>And there you have it: A self-hosted music streaming service for around €6 /
month, configured with a few lines of code and requiring little maintenance.</p>
<p>I’ve been using this for over a month now, and I couldn’t be happier.</p>
<p>What does your setup look like? Any feedback? <a href="https://arne.me/contact">Let me know!</a></p>
<section class="footnotes" data-footnotes="data-footnotes">
<ol>
<li id="fn-1">
<p>I have a load average of 0.05 while listening to music. It’s fine. <a class="footnote-backref" data-footnote-backref="data-footnote-backref" data-footnote-backref-idx="1" href="https://arne.me/feed.xml#fnref-1">↩</a></p>
</li>
<li id="fn-2">
<p>Caddy adds a <code>Server</code> header by default. To remove it, add <code>header /* { -Server }</code> to your config. <a class="footnote-backref" data-footnote-backref="data-footnote-backref" data-footnote-backref-idx="2" href="https://arne.me/feed.xml#fnref-2">↩</a></p>
</li>
<li id="fn-3">
<p>Very deep in Stack Overflow threads was one comment, suggesting that the
log file was too large.
I can’t find it anymore.
Do you have additional information?
<a href="https://arne.me/contact">I’d love to hear from you!</a> <a class="footnote-backref" data-footnote-backref="data-footnote-backref" data-footnote-backref-idx="3" href="https://arne.me/feed.xml#fnref-3">↩</a></p>
</li>
<li id="fn-4">
<p>I wish this could be configured with Nix. <a class="footnote-backref" data-footnote-backref="data-footnote-backref" data-footnote-backref-idx="4" href="https://arne.me/feed.xml#fnref-4">↩</a></p>
</li>
<li id="fn-5">
<p>No pressure, André! <a class="footnote-backref" data-footnote-backref="data-footnote-backref" data-footnote-backref-idx="5" href="https://arne.me/feed.xml#fnref-5">↩</a></p>
</li>
</ol>
</section>