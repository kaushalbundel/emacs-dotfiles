<p>The <code class="language-plaintext highlighter-rouge">ef-themes</code> is a collection of light and dark themes for GNU Emacs
whose goal is to provide colourful (“pretty”) yet legible options for
users who want something with a bit more flair than the <code class="language-plaintext highlighter-rouge">modus-themes</code>
(also designed by me).</p>

<ul>
  <li>Package name (GNU ELPA): <code class="language-plaintext highlighter-rouge">ef-themes</code></li>
  <li>Official manual: <a href="https://protesilaos.com/emacs/ef-themes">https://protesilaos.com/emacs/ef-themes</a></li>
  <li>Change log: <a href="https://protesilaos.com/emacs/ef-themes-changelog">https://protesilaos.com/emacs/ef-themes-changelog</a></li>
  <li>Sample pictures: <a href="https://protesilaos.com/emacs/ef-themes-pictures">https://protesilaos.com/emacs/ef-themes-pictures</a></li>
  <li>Git repo on SourceHut: <a href="https://git.sr.ht/~protesilaos/ef-themes">https://git.sr.ht/~protesilaos/ef-themes</a>
    <ul>
      <li>Mirrors:
        <ul>
          <li>GitHub: <a href="https://github.com/protesilaos/ef-themes">https://github.com/protesilaos/ef-themes</a></li>
          <li>GitLab: <a href="https://gitlab.com/protesilaos/ef-themes">https://gitlab.com/protesilaos/ef-themes</a></li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Mailing list: <a href="https://lists.sr.ht/~protesilaos/ef-themes">https://lists.sr.ht/~protesilaos/ef-themes</a></li>
  <li>Backronym: Eclectic Fashion in Themes Hides Exaggerated Markings,
Embellishments, and Sparkles.</li>
</ul>

<p>Below are the release notes.</p>

<hr />

<h2>The new <code class="language-plaintext highlighter-rouge">ef-arbutus</code> and <code class="language-plaintext highlighter-rouge">ef-rosa</code> themes</h2>

<p>The <code class="language-plaintext highlighter-rouge">ef-arbutus</code> theme combines red and green colours against a mild
light red-pink background. The announcement article contains
screenshots: <a href="https://protesilaos.com/codelog/2023-12-29-ef-arbutus/">https://protesilaos.com/codelog/2023-12-29-ef-arbutus/</a>.</p>

<p>The <code class="language-plaintext highlighter-rouge">ef-rosa</code> theme has a deep dark red-brown background with a blend
of magenta and green foregrounds. Check the blog post for pictures:
<a href="https://protesilaos.com/codelog/2024-01-06-emacs-ef-rosa/">https://protesilaos.com/codelog/2024-01-06-emacs-ef-rosa/</a>.</p>

<p>These two new entries bring the total count of the collection to 30.</p>

<p>Remember that you can set the user option <code class="language-plaintext highlighter-rouge">ef-themes-to-toggle</code> to two
themes in the collection and switch between them with the command
<code class="language-plaintext highlighter-rouge">ef-themes-toggle</code>. For example:</p>

<div class="language-elisp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">(</span><span class="k">setq</span> <span class="nv">ef-themes-to-toggle</span> <span class="o">'</span><span class="p">(</span><span class="nv">ef-arbutus</span> <span class="nv">ef-rosa</span><span class="p">))</span>
</code></pre></div></div>

<p>Otherwise, use the command <code class="language-plaintext highlighter-rouge">ef-themes-load-random</code> (call it with a
<code class="language-plaintext highlighter-rouge">C-u</code> prefix argument to limit the result to either dark or light
themes, else call it from Lisp, like <code class="language-plaintext highlighter-rouge">(ef-themes-load-random 'dark)</code>).</p>

<h2>Stopped the <code class="language-plaintext highlighter-rouge">transient</code> buffers from trying semantic key colouration</h2>

<p>In a recent version of <code class="language-plaintext highlighter-rouge">transient.el</code>, there is a new user option that
applies colour-coding to keys (e.g. we see those while using <code class="language-plaintext highlighter-rouge">magit</code>):
<code class="language-plaintext highlighter-rouge">transient-semantic-coloring</code>. This option is enabled by default,
changing the previous style that was used as a reference for all my
designs.</p>

<p>The idea with such colour coding is to indicate when a key continues
to display the transient, exits with a given action, and the like. For
our purposes this interface cannot work:</p>

<ul>
  <li>
    <p>We need some place to teach users what each colour means, as there
are no indicators of any sort to help them (whereas, say, in diff
buffers we have the plus and minus signs).</p>
  </li>
  <li>
    <p>Not all hues are suitable for highlighting a single character. In
light themes, for example, green and yellow colours are TERRIBLE
choices for the requirements of this interface where the key must be
clearly visible. But when we introduce multiple colours, each with
their own meaning, we will not be able to avoid those hues.</p>
  </li>
  <li>
    <p>The style of key bindings is not limited to <code class="language-plaintext highlighter-rouge">transient.el</code>. We find
them when we invoke <code class="language-plaintext highlighter-rouge">M-x</code>, do <code class="language-plaintext highlighter-rouge">M-x describe-bindings</code>, while using
the <code class="language-plaintext highlighter-rouge">which-key</code> package, and many more. If we are to change how
<code class="language-plaintext highlighter-rouge">transient.el</code> shows key bindings, then we have to retain the same
visual cues for other contexts. Otherwise, everything is inconsistent.</p>
  </li>
  <li>
    <p>All themes must use the same colours to preserve the colour coding,
thus removing an important aspect of their presentation.</p>
  </li>
  <li>
    <p>This whole paradigm does not work for themes that are optimised for
users with colour deficiency, due to the reduced number of suitable
hues. With deuteranopia, for example, we can only rely on yellow and
blue: since yellow is not optimal for single key highlights against
a light backdrop, blue is the only hue that works in such a context.</p>
  </li>
</ul>

<p>The <code class="language-plaintext highlighter-rouge">ef-themes</code> will not support this user option. All relevant faces
use the style of standard key bindings.</p>

<p>Themes can enforce user option values, but I have decided to change
the faces instead to better communicate my intent. If a user wants
semantic colouring, they can change the faces to whatever they like.</p>

<h2>The <code class="language-plaintext highlighter-rouge">evil</code> prompts now show the correct colours</h2>

<p>While using <code class="language-plaintext highlighter-rouge">evil-mode</code>, the ex prompts no longer use their generic
hardcoded red value. They take an appropriate colour from the active
Ef theme.</p>

<h2>The <code class="language-plaintext highlighter-rouge">imenu-list</code> package is now supported</h2>

<p>This package uses the built-in <code class="language-plaintext highlighter-rouge">imenu</code> infrastructure to produce a
sidebar with points of interest in the buffer. Those headings now use
the correct colour values.</p>

<p>Thanks to newhallroad for bringing this matter to my attention in
issue 35 on the GitHub mirror: <a href="https://github.com/protesilaos/ef-themes/issues/35">https://github.com/protesilaos/ef-themes/issues/35</a>.</p>

<h2>The <code class="language-plaintext highlighter-rouge">nerd-icons-completion</code> package is covered</h2>

<p>This package defines a single face for directories/folders. It looks
like all the other <code class="language-plaintext highlighter-rouge">nerd-icons</code> packages that use that icon, such as
<code class="language-plaintext highlighter-rouge">nerd-icons-dired</code>.</p>

<p>Thanks to Ryan Kaskel for the contribution:
<a href="https://lists.sr.ht/~protesilaos/ef-themes/patches/47379">https://lists.sr.ht/~protesilaos/ef-themes/patches/47379</a>. The change
is small. Ryan does not need to assign copyright to the Free Software
Foundation.</p>

<h2>Completed the coverage of the <code class="language-plaintext highlighter-rouge">denote</code> faces</h2>

<p>The new style ensures better thematic consistency.</p>

<p>These faces are found in Dired buffers when <code class="language-plaintext highlighter-rouge">denote-dired-mode</code> is
enabled. Same for the default style of the backlinks buffer.</p>

<h2>Changed highlights to avoid conflating “flagged” and “trashed” emails</h2>

<p>This is for email clients such as <code class="language-plaintext highlighter-rouge">mu4e</code> and <code class="language-plaintext highlighter-rouge">notmuch</code>. Flagged ad
trashed emails used to have the same colour, which was a problem when
the user would try to filter in such a way as to show both at the same
time.</p>

<p>Thanks to Adam Porter (GitHub user alphapapa) for bringing this matter
to my attention in issue 32 on the GitHub mirror:
<a href="https://github.com/protesilaos/ef-themes/issues/32">https://github.com/protesilaos/ef-themes/issues/32</a>.</p>

<h2>Support for more specialised faces</h2>

<ul>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">blink-matching-paren-offscreen</code>:</strong> Defined in the built-in
<code class="language-plaintext highlighter-rouge">simple.el</code> to highlight the matching parenthesis in the echo area
when it is off screen (Emacs 30).</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">mct-highlight-candidate</code>:</strong> Part of the <code class="language-plaintext highlighter-rouge">mct</code> package to highlight
the currently selected completion candidate in the <code class="language-plaintext highlighter-rouge">*Completions*</code>
buffer.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">shr-mark</code>:</strong> Used by the built-in <code class="language-plaintext highlighter-rouge">shr</code> library (Simple HTML
Renderer) to highlight <code class="language-plaintext highlighter-rouge">&lt;mark&gt;</code> tags (Emacs 29).</p>
  </li>
</ul>

<h2>Expanded the semantic colour mappings</h2>

<p>Each theme defines colours and then maps them to semantic constructs.
The idea is to not hardcode colour values, but to have an indirection
that enforces consistency, while keeping things flexible/customisable.
Users can override palette entries as explained in the manual:
<a href="https://protesilaos.com/emacs/ef-themes#h:4b923795-4b23-4345-81e5-d1c108a84b6a">https://protesilaos.com/emacs/ef-themes#h:4b923795-4b23-4345-81e5-d1c108a84b6a</a>.</p>

<p>New semantic colour mappings are:</p>

<ul>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">bg-search-current</code>:</strong> Background colour of the currently matched
term of search interfaces, like <code class="language-plaintext highlighter-rouge">isearch</code>.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">bg-search-lazy</code>:</strong> This background is used in the same contexts as
the above, but for matches other than the current one.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">bg-search-replace</code>:</strong> Background of the currently targeted
replacement in <code class="language-plaintext highlighter-rouge">query-replace</code> operations or related.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">bg-search-rx-group-{0..3}</code>,:</strong> Backgrounds for regular expression
groups, such as while using <code class="language-plaintext highlighter-rouge">M-x re-builder</code>.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">bg-fringe</code> and <code class="language-plaintext highlighter-rouge">fg-fringe</code>:</strong> Applies to the background of the
fringe area in Emacs frames. By default, the Ef themes do not use a
distinct background there, so this is for those who need it.</p>
  </li>
  <li>
    <p><strong><code class="language-plaintext highlighter-rouge">prose-table-formula</code>:</strong> Used for formula entries in plain text
tables, such as with Org, to distinguish them from the other
contents of the table.</p>
  </li>
</ul>

<h2>Miscellaneous</h2>

<ul>
  <li>
    <p>Used the updated <code class="language-plaintext highlighter-rouge">modus-themes</code> formula for the contrast tables of
all the Ef themes (stored in the file <code class="language-plaintext highlighter-rouge">contrast-ratios.org</code> in the
project’s root directory).</p>

    <p>I made this change in commit <code class="language-plaintext highlighter-rouge">b410fcc</code> in the <code class="language-plaintext highlighter-rouge">modus-themes</code> repo.
The idea is to avoid the use of the <code class="language-plaintext highlighter-rouge">cl-loop</code> and other <code class="language-plaintext highlighter-rouge">cl-</code>
functions that we don’t really need (and which also have their own
mini language that I find hard to remember/use).</p>
  </li>
  <li>
    <p>Tweaked the value of a few accented backgrounds to better fit with
each theme’s style. These colours may not be spotted anywhere right
now, but are nonetheless available to those who use palette
overrides (run the command <code class="language-plaintext highlighter-rouge">ef-themes-preview-colors</code> or
<code class="language-plaintext highlighter-rouge">ef-themes-preview-colors-current</code> to visualise them).</p>
  </li>
</ul>