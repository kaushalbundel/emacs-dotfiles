
<p>
When we last left our heroes we had made the API call to
dictionaryapi.com, gotten the response and coverted the json string
into elisp data. Specifically an array that contained a hash table.</p>
<p>
Today&#39;s video will take us the rest of the way to our thesaurus mode -
run the function and we&#39;ll get a list of synonyms for the word we&#39;re
currently at.</p>
<p>
First, we had to pull out the synonyms from the response. To do that
we used basic elisp data manipulation. We used <strong>(aref json-resp 0)</strong> to
pull out the hash table, which was the 0<sup>th</sup> element of the array
response, then wrap that in <strong>(gethash &#34;meta&#34;â€¦)</strong> to pull out the
&#34;meta&#34; hash entry. That&#39;s a hash table in its own right so we then
pull out the &#34;syns&#34; element with another <strong>gethash</strong> and then finally,
since that&#39;s an array with an array in it, another <strong>aref</strong>. The
complete code is up at gitlab but it&#39;s essentially:</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span> (<span style="color:#a6e22e">aref</span> (<span style="color:#a6e22e">gethash</span> <span style="color:#e6db74">&#34;syns&#34;</span> (<span style="color:#a6e22e">gethash</span> <span style="color:#e6db74">&#34;meta&#34;</span> (<span style="color:#a6e22e">aref</span> json-resp <span style="color:#ae81ff">0</span>))) <span style="color:#ae81ff">0</span>)</span></span></code></pre></div>
</div>
<p>
This gives us an array of synonym strings but we want it to be a list
so we used <strong>mapcar</strong> to convert.</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span> (<span style="color:#a6e22e">mapcar</span> <span style="color:#a6e22e">#&#39;identity</span> word-list)</span></span></code></pre></div>
</div>
<p>
There&#39;s probably a better way to do this but that&#39;s what came to mind.</p>
<p>
From there, the actual function to replace the word under the cursor
with its synonym is pretty straightforward:</p>
<div class="src src-emacs-lisp">
<div class="highlight"><pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"><code class="language-emacs-lisp" data-lang="emacs-lisp"><span style="display:flex;"><span>(defun word-to-syn (n)
</span></span><span style="display:flex;"><span> <span style="color:#e6db74">&#34;&#34;</span>
</span></span><span style="display:flex;"><span> (interactive <span style="color:#e6db74">&#34;p&#34;</span>)
</span></span><span style="display:flex;"><span> (let* ( (word (current-word))
</span></span><span style="display:flex;"><span> (word-list (get-synonyms word))
</span></span><span style="display:flex;"><span> (new-word (<span style="color:#a6e22e">completing-read</span> <span style="color:#e6db74">&#34;Replacement:&#34;</span> word-list)))
</span></span><span style="display:flex;"><span> (backward-word)
</span></span><span style="display:flex;"><span> (kill-word <span style="color:#ae81ff">1</span>)
</span></span><span style="display:flex;"><span> (<span style="color:#a6e22e">insert</span> new-word)))</span></span></code></pre></div>
</div>
<p>
The <strong>current-word</strong> function returns the word at or before the cursor
location. We then use the <strong>get-synonyms</strong> function that we just
completed and then use <strong>completing-read</strong> which lets us select a word
from the synonym list.</p>
<p>
Once we have the replacement word, it&#39;s just buffer manipulations to
delete the old word and insert the new one.</p>
<p>
The rest of the video shows turning this into a mode and binding the
function to a key.</p>
<p>
So, that&#39;s it for the elisp series for now. I&#39;ll do more if I can
think of interesting and fun things to do but no promises.</p>
<p>
You can get all the code at the repo linked below:</p>
<div id="outline-container-headline-1" class="outline-2">
<h2 id="headline-1">
Code:
</h2>
<div id="outline-text-headline-1" class="outline-text-2">
<p>
The code for the series is still up here:</p>
<ul>
<li><a href="https://gitlab.com/zamansky/learning-elisp-code">https://gitlab.com/zamansky/learning-elisp-code</a></li>
</ul>
</div>
</div>
<div id="outline-container-headline-2" class="outline-2">
<h2 id="headline-2">
The videos:
</h2>
<div id="outline-text-headline-2" class="outline-text-2">
<iframe width="560" height="315" src="https://www.youtube.com/embed/ZBN4Kphv-ac?si=lMyYassaUwz6ia8g" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
<p>
Video link: <a href="https://www.youtube.com/watch?v=ZBN4Kphv-ac">https://www.youtube.com/watch?v=ZBN4Kphv-ac</a></p>
</div>
</div>